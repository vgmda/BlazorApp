@page "/tasklist"

<PageTitle>Task List</PageTitle>

<h1>Task List</h1>

<p>This component demonstrates adding data to a list.</p>

@if (taskList.Count > 0)
{
    <div class="progress my-3">
        <div class="progress-bar" role="progressbar"
             style="width: @(percentDone)%"
             aria-valuemin="0"
             aria-valuemax="100">@(percentDone)%</div>
    </div>
}

<EditForm class="row g-3" Model="@newTask" OnValidSubmit="AddTask">
    <div class="col-auto">
        <InputText class="form-control" @bind-Value="newTask.Task" />
    </div>
    <div class="col-auto">
        <button class="btn btn-outline-primary mb-3" type="submit">Add Task</button>
    </div>

</EditForm>

<ul class="list-group">
    @foreach (var task in taskList)
    {
        @if (task.IsComplete)
        {
            <li class="list-group-item list-group-item-secondary my-1"
                @onclick="(()=>task.IsComplete = !task.IsComplete)">
                <del>@task.Task</del>
            </li>
        }
        else
        {
            <li class="list-group-item list-group-item-success my-1"
                @onclick="(()=>task.IsComplete = !task.IsComplete)">
                @task.Task
            </li>
        }
    }

</ul>

@code {

    private List<TaskModel> taskList = new List<TaskModel>();
    private TaskModel newTask = new TaskModel();

    private int percentDone
    {
        get
        {
            return (taskList.Count(x => x.IsComplete) * 100) / taskList.Count;
        }
    }

    private void AddTask()
    {
        taskList.Add(newTask);
        newTask = new TaskModel();
    }
}

